@model QuestionPaperApp.Models.Question

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .btn-color {
        background-color: #0e1c36;
        color: #fff;
        transition: background-color 0.3s ease;
    }

        .btn-color:hover {
            background-color: #0c204b; /* Change to desired hover color */
        }



    .cardbody-color {
        background-color: #ebf2fa;
    }

    a {
        text-decoration: none;
    }

    .inp {
        max-width: 100%;
    }
</style>
<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Question</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Question Paper Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" value="@ViewBag.QuestionPaperNameID" class="form-control" readonly="readonly" />
            @Html.HiddenFor(model => model.QuestionPaperID)

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <button type="submit" class="btn btn-color w-100">Create</button>

            <p class="text-center mt-3 border p-3">@Html.ActionLink("Back to List", "Index")</p>


        </div>
    </div>
</div>
}



